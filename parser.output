Terminals unused in grammar

   ARROW


Grammar

    0 $accept: function $end

    1 function: function_header optional_variable body

    2 function_header: FUNCTION IDENTIFIER parameters RETURNS type ';'
    3                | error ';'

    4 optional_variable: optional_variable variable
    5                  | error ';'
    6                  | %empty

    7 variable: IDENTIFIER ':' type IS statement_

    8 parameters: parameters ',' parameter
    9           | parameter
   10           | %empty

   11 parameter: IDENTIFIER ':' type

   12 type: INTEGER
   13     | REAL
   14     | BOOLEAN

   15 body: BEGIN_ statement_ END ';'

   16 statement_: statement ';'
   17           | error ';'

   18 statement: expression
   19          | REDUCE operator reductions ENDREDUCE
   20          | IF expression THEN statement_ ELSE statement_ ENDIF

   21 operator: ADDOP
   22         | MULOP
   23         | REMOP
   24         | EXPOP
   25         | RELOP

   26 reductions: reductions statement_
   27           | %empty

   28 expression: expression OROP binary_logic
   29           | binary_logic

   30 binary_logic: binary_logic ANDOP unary_logic
   31             | unary_logic

   32 unary_logic: NOTOP unary_logic
   33            | relation

   34 relation: relation RELOP term
   35         | term

   36 term: term ADDOP factor
   37     | factor

   38 factor: factor MULOP exp
   39       | factor REMOP exp
   40       | exp

   41 exp: primary
   42    | primary EXPOP exp

   43 primary: '(' expression ')'
   44        | INT_LITERAL
   45        | REAL_LITERAL
   46        | BOOL_LITERAL
   47        | IDENTIFIER


Terminals, with rules where they appear

$end (0) 0
'(' (40) 43
')' (41) 43
',' (44) 8
':' (58) 7 11
';' (59) 2 3 5 15 16 17
error (256) 3 5 17
IDENTIFIER (258) 2 7 11 47
INT_LITERAL (259) 44
REAL_LITERAL (260) 45
BOOL_LITERAL (261) 46
ADDOP (262) 21 36
MULOP (263) 22 38
RELOP (264) 25 34
EXPOP (265) 24 42
REMOP (266) 23 39
ANDOP (267) 30
OROP (268) 28
NOTOP (269) 32
ARROW (270)
BEGIN_ (271) 15
BOOLEAN (272) 14
END (273) 15
ENDREDUCE (274) 19
FUNCTION (275) 2
INTEGER (276) 12
IS (277) 7
REDUCE (278) 19
RETURNS (279) 2
REAL (280) 13
IF (281) 20
ENDIF (282) 20
ELSE (283) 20
THEN (284) 20


Nonterminals, with rules where they appear

$accept (35)
    on left: 0
function (36)
    on left: 1, on right: 0
function_header (37)
    on left: 2 3, on right: 1
optional_variable (38)
    on left: 4 5 6, on right: 1 4
variable (39)
    on left: 7, on right: 4
parameters (40)
    on left: 8 9 10, on right: 2 8
parameter (41)
    on left: 11, on right: 8 9
type (42)
    on left: 12 13 14, on right: 2 7 11
body (43)
    on left: 15, on right: 1
statement_ (44)
    on left: 16 17, on right: 7 15 20 26
statement (45)
    on left: 18 19 20, on right: 16
operator (46)
    on left: 21 22 23 24 25, on right: 19
reductions (47)
    on left: 26 27, on right: 19 26
expression (48)
    on left: 28 29, on right: 18 20 28 43
binary_logic (49)
    on left: 30 31, on right: 28 29 30
unary_logic (50)
    on left: 32 33, on right: 30 31 32
relation (51)
    on left: 34 35, on right: 33 34
term (52)
    on left: 36 37, on right: 34 35 36
factor (53)
    on left: 38 39 40, on right: 36 37 38 39
exp (54)
    on left: 41 42, on right: 38 39 40 42
primary (55)
    on left: 43 44 45 46 47, on right: 41 42


State 0

    0 $accept: . function $end

    error     shift, and go to state 1
    FUNCTION  shift, and go to state 2

    function         go to state 3
    function_header  go to state 4


State 1

    3 function_header: error . ';'

    ';'  shift, and go to state 5


State 2

    2 function_header: FUNCTION . IDENTIFIER parameters RETURNS type ';'

    IDENTIFIER  shift, and go to state 6


State 3

    0 $accept: function . $end

    $end  shift, and go to state 7


State 4

    1 function: function_header . optional_variable body

    error  shift, and go to state 8

    IDENTIFIER  reduce using rule 6 (optional_variable)
    BEGIN_      reduce using rule 6 (optional_variable)

    optional_variable  go to state 9


State 5

    3 function_header: error ';' .

    $default  reduce using rule 3 (function_header)


State 6

    2 function_header: FUNCTION IDENTIFIER . parameters RETURNS type ';'

    IDENTIFIER  shift, and go to state 10

    $default  reduce using rule 10 (parameters)

    parameters  go to state 11
    parameter   go to state 12


State 7

    0 $accept: function $end .

    $default  accept


State 8

    5 optional_variable: error . ';'

    ';'  shift, and go to state 13


State 9

    1 function: function_header optional_variable . body
    4 optional_variable: optional_variable . variable

    IDENTIFIER  shift, and go to state 14
    BEGIN_      shift, and go to state 15

    variable  go to state 16
    body      go to state 17


State 10

   11 parameter: IDENTIFIER . ':' type

    ':'  shift, and go to state 18


State 11

    2 function_header: FUNCTION IDENTIFIER parameters . RETURNS type ';'
    8 parameters: parameters . ',' parameter

    RETURNS  shift, and go to state 19
    ','      shift, and go to state 20


State 12

    9 parameters: parameter .

    $default  reduce using rule 9 (parameters)


State 13

    5 optional_variable: error ';' .

    $default  reduce using rule 5 (optional_variable)


State 14

    7 variable: IDENTIFIER . ':' type IS statement_

    ':'  shift, and go to state 21


State 15

   15 body: BEGIN_ . statement_ END ';'

    error         shift, and go to state 22
    IDENTIFIER    shift, and go to state 23
    INT_LITERAL   shift, and go to state 24
    REAL_LITERAL  shift, and go to state 25
    BOOL_LITERAL  shift, and go to state 26
    NOTOP         shift, and go to state 27
    REDUCE        shift, and go to state 28
    IF            shift, and go to state 29
    '('           shift, and go to state 30

    statement_    go to state 31
    statement     go to state 32
    expression    go to state 33
    binary_logic  go to state 34
    unary_logic   go to state 35
    relation      go to state 36
    term          go to state 37
    factor        go to state 38
    exp           go to state 39
    primary       go to state 40


State 16

    4 optional_variable: optional_variable variable .

    $default  reduce using rule 4 (optional_variable)


State 17

    1 function: function_header optional_variable body .

    $default  reduce using rule 1 (function)


State 18

   11 parameter: IDENTIFIER ':' . type

    BOOLEAN  shift, and go to state 41
    INTEGER  shift, and go to state 42
    REAL     shift, and go to state 43

    type  go to state 44


State 19

    2 function_header: FUNCTION IDENTIFIER parameters RETURNS . type ';'

    BOOLEAN  shift, and go to state 41
    INTEGER  shift, and go to state 42
    REAL     shift, and go to state 43

    type  go to state 45


State 20

    8 parameters: parameters ',' . parameter

    IDENTIFIER  shift, and go to state 10

    parameter  go to state 46


State 21

    7 variable: IDENTIFIER ':' . type IS statement_

    BOOLEAN  shift, and go to state 41
    INTEGER  shift, and go to state 42
    REAL     shift, and go to state 43

    type  go to state 47


State 22

   17 statement_: error . ';'

    ';'  shift, and go to state 48


State 23

   47 primary: IDENTIFIER .

    $default  reduce using rule 47 (primary)


State 24

   44 primary: INT_LITERAL .

    $default  reduce using rule 44 (primary)


State 25

   45 primary: REAL_LITERAL .

    $default  reduce using rule 45 (primary)


State 26

   46 primary: BOOL_LITERAL .

    $default  reduce using rule 46 (primary)


State 27

   32 unary_logic: NOTOP . unary_logic

    IDENTIFIER    shift, and go to state 23
    INT_LITERAL   shift, and go to state 24
    REAL_LITERAL  shift, and go to state 25
    BOOL_LITERAL  shift, and go to state 26
    NOTOP         shift, and go to state 27
    '('           shift, and go to state 30

    unary_logic  go to state 49
    relation     go to state 36
    term         go to state 37
    factor       go to state 38
    exp          go to state 39
    primary      go to state 40


State 28

   19 statement: REDUCE . operator reductions ENDREDUCE

    ADDOP  shift, and go to state 50
    MULOP  shift, and go to state 51
    RELOP  shift, and go to state 52
    EXPOP  shift, and go to state 53
    REMOP  shift, and go to state 54

    operator  go to state 55


State 29

   20 statement: IF . expression THEN statement_ ELSE statement_ ENDIF

    IDENTIFIER    shift, and go to state 23
    INT_LITERAL   shift, and go to state 24
    REAL_LITERAL  shift, and go to state 25
    BOOL_LITERAL  shift, and go to state 26
    NOTOP         shift, and go to state 27
    '('           shift, and go to state 30

    expression    go to state 56
    binary_logic  go to state 34
    unary_logic   go to state 35
    relation      go to state 36
    term          go to state 37
    factor        go to state 38
    exp           go to state 39
    primary       go to state 40


State 30

   43 primary: '(' . expression ')'

    IDENTIFIER    shift, and go to state 23
    INT_LITERAL   shift, and go to state 24
    REAL_LITERAL  shift, and go to state 25
    BOOL_LITERAL  shift, and go to state 26
    NOTOP         shift, and go to state 27
    '('           shift, and go to state 30

    expression    go to state 57
    binary_logic  go to state 34
    unary_logic   go to state 35
    relation      go to state 36
    term          go to state 37
    factor        go to state 38
    exp           go to state 39
    primary       go to state 40


State 31

   15 body: BEGIN_ statement_ . END ';'

    END  shift, and go to state 58


State 32

   16 statement_: statement . ';'

    ';'  shift, and go to state 59


State 33

   18 statement: expression .
   28 expression: expression . OROP binary_logic

    OROP  shift, and go to state 60

    $default  reduce using rule 18 (statement)


State 34

   29 expression: binary_logic .
   30 binary_logic: binary_logic . ANDOP unary_logic

    ANDOP  shift, and go to state 61

    $default  reduce using rule 29 (expression)


State 35

   31 binary_logic: unary_logic .

    $default  reduce using rule 31 (binary_logic)


State 36

   33 unary_logic: relation .
   34 relation: relation . RELOP term

    RELOP  shift, and go to state 62

    $default  reduce using rule 33 (unary_logic)


State 37

   35 relation: term .
   36 term: term . ADDOP factor

    ADDOP  shift, and go to state 63

    $default  reduce using rule 35 (relation)


State 38

   37 term: factor .
   38 factor: factor . MULOP exp
   39       | factor . REMOP exp

    MULOP  shift, and go to state 64
    REMOP  shift, and go to state 65

    $default  reduce using rule 37 (term)


State 39

   40 factor: exp .

    $default  reduce using rule 40 (factor)


State 40

   41 exp: primary .
   42    | primary . EXPOP exp

    EXPOP  shift, and go to state 66

    $default  reduce using rule 41 (exp)


State 41

   14 type: BOOLEAN .

    $default  reduce using rule 14 (type)


State 42

   12 type: INTEGER .

    $default  reduce using rule 12 (type)


State 43

   13 type: REAL .

    $default  reduce using rule 13 (type)


State 44

   11 parameter: IDENTIFIER ':' type .

    $default  reduce using rule 11 (parameter)


State 45

    2 function_header: FUNCTION IDENTIFIER parameters RETURNS type . ';'

    ';'  shift, and go to state 67


State 46

    8 parameters: parameters ',' parameter .

    $default  reduce using rule 8 (parameters)


State 47

    7 variable: IDENTIFIER ':' type . IS statement_

    IS  shift, and go to state 68


State 48

   17 statement_: error ';' .

    $default  reduce using rule 17 (statement_)


State 49

   32 unary_logic: NOTOP unary_logic .

    $default  reduce using rule 32 (unary_logic)


State 50

   21 operator: ADDOP .

    $default  reduce using rule 21 (operator)


State 51

   22 operator: MULOP .

    $default  reduce using rule 22 (operator)


State 52

   25 operator: RELOP .

    $default  reduce using rule 25 (operator)


State 53

   24 operator: EXPOP .

    $default  reduce using rule 24 (operator)


State 54

   23 operator: REMOP .

    $default  reduce using rule 23 (operator)


State 55

   19 statement: REDUCE operator . reductions ENDREDUCE

    $default  reduce using rule 27 (reductions)

    reductions  go to state 69


State 56

   20 statement: IF expression . THEN statement_ ELSE statement_ ENDIF
   28 expression: expression . OROP binary_logic

    OROP  shift, and go to state 60
    THEN  shift, and go to state 70


State 57

   28 expression: expression . OROP binary_logic
   43 primary: '(' expression . ')'

    OROP  shift, and go to state 60
    ')'   shift, and go to state 71


State 58

   15 body: BEGIN_ statement_ END . ';'

    ';'  shift, and go to state 72


State 59

   16 statement_: statement ';' .

    $default  reduce using rule 16 (statement_)


State 60

   28 expression: expression OROP . binary_logic

    IDENTIFIER    shift, and go to state 23
    INT_LITERAL   shift, and go to state 24
    REAL_LITERAL  shift, and go to state 25
    BOOL_LITERAL  shift, and go to state 26
    NOTOP         shift, and go to state 27
    '('           shift, and go to state 30

    binary_logic  go to state 73
    unary_logic   go to state 35
    relation      go to state 36
    term          go to state 37
    factor        go to state 38
    exp           go to state 39
    primary       go to state 40


State 61

   30 binary_logic: binary_logic ANDOP . unary_logic

    IDENTIFIER    shift, and go to state 23
    INT_LITERAL   shift, and go to state 24
    REAL_LITERAL  shift, and go to state 25
    BOOL_LITERAL  shift, and go to state 26
    NOTOP         shift, and go to state 27
    '('           shift, and go to state 30

    unary_logic  go to state 74
    relation     go to state 36
    term         go to state 37
    factor       go to state 38
    exp          go to state 39
    primary      go to state 40


State 62

   34 relation: relation RELOP . term

    IDENTIFIER    shift, and go to state 23
    INT_LITERAL   shift, and go to state 24
    REAL_LITERAL  shift, and go to state 25
    BOOL_LITERAL  shift, and go to state 26
    '('           shift, and go to state 30

    term     go to state 75
    factor   go to state 38
    exp      go to state 39
    primary  go to state 40


State 63

   36 term: term ADDOP . factor

    IDENTIFIER    shift, and go to state 23
    INT_LITERAL   shift, and go to state 24
    REAL_LITERAL  shift, and go to state 25
    BOOL_LITERAL  shift, and go to state 26
    '('           shift, and go to state 30

    factor   go to state 76
    exp      go to state 39
    primary  go to state 40


State 64

   38 factor: factor MULOP . exp

    IDENTIFIER    shift, and go to state 23
    INT_LITERAL   shift, and go to state 24
    REAL_LITERAL  shift, and go to state 25
    BOOL_LITERAL  shift, and go to state 26
    '('           shift, and go to state 30

    exp      go to state 77
    primary  go to state 40


State 65

   39 factor: factor REMOP . exp

    IDENTIFIER    shift, and go to state 23
    INT_LITERAL   shift, and go to state 24
    REAL_LITERAL  shift, and go to state 25
    BOOL_LITERAL  shift, and go to state 26
    '('           shift, and go to state 30

    exp      go to state 78
    primary  go to state 40


State 66

   42 exp: primary EXPOP . exp

    IDENTIFIER    shift, and go to state 23
    INT_LITERAL   shift, and go to state 24
    REAL_LITERAL  shift, and go to state 25
    BOOL_LITERAL  shift, and go to state 26
    '('           shift, and go to state 30

    exp      go to state 79
    primary  go to state 40


State 67

    2 function_header: FUNCTION IDENTIFIER parameters RETURNS type ';' .

    $default  reduce using rule 2 (function_header)


State 68

    7 variable: IDENTIFIER ':' type IS . statement_

    error         shift, and go to state 22
    IDENTIFIER    shift, and go to state 23
    INT_LITERAL   shift, and go to state 24
    REAL_LITERAL  shift, and go to state 25
    BOOL_LITERAL  shift, and go to state 26
    NOTOP         shift, and go to state 27
    REDUCE        shift, and go to state 28
    IF            shift, and go to state 29
    '('           shift, and go to state 30

    statement_    go to state 80
    statement     go to state 32
    expression    go to state 33
    binary_logic  go to state 34
    unary_logic   go to state 35
    relation      go to state 36
    term          go to state 37
    factor        go to state 38
    exp           go to state 39
    primary       go to state 40


State 69

   19 statement: REDUCE operator reductions . ENDREDUCE
   26 reductions: reductions . statement_

    error         shift, and go to state 22
    IDENTIFIER    shift, and go to state 23
    INT_LITERAL   shift, and go to state 24
    REAL_LITERAL  shift, and go to state 25
    BOOL_LITERAL  shift, and go to state 26
    NOTOP         shift, and go to state 27
    ENDREDUCE     shift, and go to state 81
    REDUCE        shift, and go to state 28
    IF            shift, and go to state 29
    '('           shift, and go to state 30

    statement_    go to state 82
    statement     go to state 32
    expression    go to state 33
    binary_logic  go to state 34
    unary_logic   go to state 35
    relation      go to state 36
    term          go to state 37
    factor        go to state 38
    exp           go to state 39
    primary       go to state 40


State 70

   20 statement: IF expression THEN . statement_ ELSE statement_ ENDIF

    error         shift, and go to state 22
    IDENTIFIER    shift, and go to state 23
    INT_LITERAL   shift, and go to state 24
    REAL_LITERAL  shift, and go to state 25
    BOOL_LITERAL  shift, and go to state 26
    NOTOP         shift, and go to state 27
    REDUCE        shift, and go to state 28
    IF            shift, and go to state 29
    '('           shift, and go to state 30

    statement_    go to state 83
    statement     go to state 32
    expression    go to state 33
    binary_logic  go to state 34
    unary_logic   go to state 35
    relation      go to state 36
    term          go to state 37
    factor        go to state 38
    exp           go to state 39
    primary       go to state 40


State 71

   43 primary: '(' expression ')' .

    $default  reduce using rule 43 (primary)


State 72

   15 body: BEGIN_ statement_ END ';' .

    $default  reduce using rule 15 (body)


State 73

   28 expression: expression OROP binary_logic .
   30 binary_logic: binary_logic . ANDOP unary_logic

    ANDOP  shift, and go to state 61

    $default  reduce using rule 28 (expression)


State 74

   30 binary_logic: binary_logic ANDOP unary_logic .

    $default  reduce using rule 30 (binary_logic)


State 75

   34 relation: relation RELOP term .
   36 term: term . ADDOP factor

    ADDOP  shift, and go to state 63

    $default  reduce using rule 34 (relation)


State 76

   36 term: term ADDOP factor .
   38 factor: factor . MULOP exp
   39       | factor . REMOP exp

    MULOP  shift, and go to state 64
    REMOP  shift, and go to state 65

    $default  reduce using rule 36 (term)


State 77

   38 factor: factor MULOP exp .

    $default  reduce using rule 38 (factor)


State 78

   39 factor: factor REMOP exp .

    $default  reduce using rule 39 (factor)


State 79

   42 exp: primary EXPOP exp .

    $default  reduce using rule 42 (exp)


State 80

    7 variable: IDENTIFIER ':' type IS statement_ .

    $default  reduce using rule 7 (variable)


State 81

   19 statement: REDUCE operator reductions ENDREDUCE .

    $default  reduce using rule 19 (statement)


State 82

   26 reductions: reductions statement_ .

    $default  reduce using rule 26 (reductions)


State 83

   20 statement: IF expression THEN statement_ . ELSE statement_ ENDIF

    ELSE  shift, and go to state 84


State 84

   20 statement: IF expression THEN statement_ ELSE . statement_ ENDIF

    error         shift, and go to state 22
    IDENTIFIER    shift, and go to state 23
    INT_LITERAL   shift, and go to state 24
    REAL_LITERAL  shift, and go to state 25
    BOOL_LITERAL  shift, and go to state 26
    NOTOP         shift, and go to state 27
    REDUCE        shift, and go to state 28
    IF            shift, and go to state 29
    '('           shift, and go to state 30

    statement_    go to state 85
    statement     go to state 32
    expression    go to state 33
    binary_logic  go to state 34
    unary_logic   go to state 35
    relation      go to state 36
    term          go to state 37
    factor        go to state 38
    exp           go to state 39
    primary       go to state 40


State 85

   20 statement: IF expression THEN statement_ ELSE statement_ . ENDIF

    ENDIF  shift, and go to state 86


State 86

   20 statement: IF expression THEN statement_ ELSE statement_ ENDIF .

    $default  reduce using rule 20 (statement)
